
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author LENOVO
 */
public class Cart extends javax.swing.JFrame {

    /**
     * Creates new form Cart
     */
    
    private MainMenu b = new MainMenu();
    
    
   
        
    
   public void select_combo()
    {
       int ind = combocheckout.getSelectedIndex();
         
        if (ind == 0)
        {
                    String e = totalPrice.getText();
                    DShipping d = new DShipping(e);
                    d.setVisible(true);
                    this.dispose();                                 
        }
        
        if (ind == 1)
        {
            String e = totalPrice.getText();
            WCustInfo w = new WCustInfo(e);
            w.setVisible(true);
            this.dispose();
        }
    }
    
    public void printBouquet(){
        
        
        if(Wishlist.cartBqtBlossom.isSelected() == true)
           labelBqtBlossom.setText(b.bouquet[0].name + "   " + b.bouquet[0].price);
        
        if(Wishlist.cartBqtHydrangea.isSelected()== true)
            labelBqtHydrangea.setText(b.bouquet[1].name + "   " + b.bouquet[1].price);
        
        if(Wishlist.cartBqtRose.isSelected()== true)
            labelBqtRoses.setText(b.bouquet[2].name + "   " + b.bouquet[2].price);
        
        if(Wishlist.cartBqtSunflower.isSelected()== true)
            labelBqtSunflower.setText(b.bouquet[3].name + "   " + b.bouquet[3].price);
        
        if(Wishlist.cartBqtBabybreath.isSelected()== true)
            labelBqtBabybreath.setText(b.bouquet[4].name + "   " + b.bouquet[4].price);
       
    }
    
     public void printPackage(){
        
        if(Wishlist.cartPkgFL.isSelected()== true)
           labelPkgFL.setText(b.pakej[0].name + "   " + b.pakej[0].price);
        
        if(Wishlist.cartPkgCongrates.isSelected()== true)
            labelPkgCongrates.setText(b.pakej[1].name + "   " + b.pakej[1].price);
       
        if(Wishlist.cartPkgGWS.isSelected()== true)
            labelPkgGWS.setText(b.pakej[2].name + "   " + b.pakej[2].price);
        
        if(Wishlist.cartPkgCondolescence.isSelected()== true)
            labelPkgCondolescence.setText(b.pakej[3].name + "   " + b.pakej[3].price);
        
        if(Wishlist.cartPkgHB.isSelected()== true)
            labelPkgHB.setText(b.pakej[4].name + "   " + b.pakej[4].price);
     }
     
     public void printBulk(){
        if(Wishlist.cartBulkAster.isSelected()== true)
           labelBulkAster.setText(b.bulk[0].name + "   " + b.bulk[0].price);
        
        if(Wishlist.cartBulkDahlia.isSelected()== true)
           labelBulkDahlia.setText(b.bulk[1].name + "   " + b.bulk[1].price);
        
        if(Wishlist.cartBulkRose.isSelected()== true)
           labelBulkRose.setText(b.bulk[2].name + "   " + b.bulk[2].price);
        
        if(Wishlist.cartBulkDaisy.isSelected()== true)
           labelBulkDaisy.setText(b.bulk[3].name + "   " + b.bulk[3].price);
        
        if(Wishlist.cartBulkSunflower.isSelected()== true)
           labelBulkSunflower.setText(b.bulk[4].name + "   " + b.bulk[4].price);
    }
     
      public void printFruitBasket(){
        
        if(Wishlist.cartFBSmall.isSelected()== true)
           labelFBSmall.setText(b.fruitbasket[0].name + "   " + b.fruitbasket[0].price);
        
        if(Wishlist.cartFBMedium.isSelected()== true)
           labelFBMedium.setText(b.fruitbasket[1].name + "   " + b.fruitbasket[1].price);
        
        if(Wishlist.cartFBLarge.isSelected()== true)
           labelFBLarge.setText(b.fruitbasket[2].name + "   " + b.fruitbasket[2].price);
    }
        
    public Cart() {
        initComponents();
        
        if(Bouquet.bcount>0) 
          printBouquet();
        
        if(Package.pcount>0)
           printPackage();
        
         if(Bulk.bkcount>0)
           printBulk();
         
         if(FruitBasket.fcount>0)
           printFruitBasket();
         
         jLabel5.setVisible(false);
         combocheckout.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        panelBouquet = new javax.swing.JPanel();
        labelBqtBlossom = new javax.swing.JLabel();
        labelBqtRoses = new javax.swing.JLabel();
        labelBqtSunflower = new javax.swing.JLabel();
        labelBqtBabybreath = new javax.swing.JLabel();
        labelBqtHydrangea = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        qBqtBlossom = new javax.swing.JTextField();
        qBqtHydrangea = new javax.swing.JTextField();
        qBqtRose = new javax.swing.JTextField();
        qBqtSunflower = new javax.swing.JTextField();
        qBqtBabybreath = new javax.swing.JTextField();
        panelBulk = new javax.swing.JPanel();
        labelBulkAster = new javax.swing.JLabel();
        labelBulkRose = new javax.swing.JLabel();
        labelBulkDaisy = new javax.swing.JLabel();
        labelBulkSunflower = new javax.swing.JLabel();
        labelBulkDahlia = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        qBulkAster = new javax.swing.JTextField();
        qBulkDahlia = new javax.swing.JTextField();
        qBulkRose = new javax.swing.JTextField();
        qBulkDaisy = new javax.swing.JTextField();
        qBulkSunflower = new javax.swing.JTextField();
        panelPackage = new javax.swing.JPanel();
        labelPkgFL = new javax.swing.JLabel();
        labelPkgGWS = new javax.swing.JLabel();
        labelPkgCondolescence = new javax.swing.JLabel();
        labelPkgHB = new javax.swing.JLabel();
        labelPkgCongrates = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        qPkgFL = new javax.swing.JTextField();
        qPkgCongrates = new javax.swing.JTextField();
        qPkgGWS = new javax.swing.JTextField();
        qPkgCondolescence = new javax.swing.JTextField();
        qPkgHB = new javax.swing.JTextField();
        panelPackage1 = new javax.swing.JPanel();
        labelFBSmall = new javax.swing.JLabel();
        labelFBLarge = new javax.swing.JLabel();
        labelFBMedium = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        qFBSmall = new javax.swing.JTextField();
        qFBMedium = new javax.swing.JTextField();
        qFBLarge = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        combocheckout = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        totalPrice = new javax.swing.JLabel();
        calBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        jLabel10.setFont(new java.awt.Font("Goudy Old Style", 0, 36)); // NOI18N
        jLabel10.setText("Package");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(230, 400, 130, 80);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/header 4 copy.png"))); // NOI18N
        jPanel1.add(jLabel7);
        jLabel7.setBounds(100, 380, 390, 130);

        jLabel9.setFont(new java.awt.Font("Goudy Old Style", 0, 36)); // NOI18N
        jLabel9.setText("Bouquet");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(210, 30, 150, 50);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/header 3 copy.png"))); // NOI18N
        jPanel1.add(jLabel8);
        jLabel8.setBounds(90, -10, 360, 140);

        jLabel12.setFont(new java.awt.Font("Goudy Old Style", 0, 36)); // NOI18N
        jLabel12.setText("Fruit Basket");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(750, 410, 160, 50);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/header 4 copy.png"))); // NOI18N
        jLabel11.setText("jLabel5");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(640, 370, 350, 130);

        jLabel13.setFont(new java.awt.Font("Goudy Old Style", 0, 36)); // NOI18N
        jLabel13.setText("Bulk");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(780, 30, 80, 60);

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/header 3 copy.png"))); // NOI18N
        jLabel14.setText("jLabel7");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(630, -10, 360, 140);

        jButton3.setText("Continue Shopping");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(910, 930, 170, 29);

        panelBouquet.setBackground(new java.awt.Color(255, 255, 204));
        panelBouquet.setForeground(new java.awt.Color(255, 255, 204));
        panelBouquet.setLayout(null);
        panelBouquet.add(labelBqtBlossom);
        labelBqtBlossom.setBounds(34, 60, 321, 37);
        panelBouquet.add(labelBqtRoses);
        labelBqtRoses.setBounds(34, 170, 321, 37);
        panelBouquet.add(labelBqtSunflower);
        labelBqtSunflower.setBounds(34, 227, 321, 37);

        labelBqtBabybreath.setBackground(new java.awt.Color(255, 255, 255));
        panelBouquet.add(labelBqtBabybreath);
        labelBqtBabybreath.setBounds(34, 280, 321, 37);
        panelBouquet.add(labelBqtHydrangea);
        labelBqtHydrangea.setBounds(34, 115, 321, 37);

        jLabel1.setText("Quantity");
        panelBouquet.add(jLabel1);
        jLabel1.setBounds(415, 22, 60, 29);

        qBqtBlossom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qBqtBlossomActionPerformed(evt);
            }
        });
        qBqtBlossom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qBqtBlossomKeyTyped(evt);
            }
        });
        panelBouquet.add(qBqtBlossom);
        qBqtBlossom.setBounds(407, 60, 90, 37);

        qBqtHydrangea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qBqtHydrangeaKeyTyped(evt);
            }
        });
        panelBouquet.add(qBqtHydrangea);
        qBqtHydrangea.setBounds(407, 115, 90, 37);

        qBqtRose.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qBqtRoseKeyTyped(evt);
            }
        });
        panelBouquet.add(qBqtRose);
        qBqtRose.setBounds(407, 170, 90, 37);

        qBqtSunflower.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qBqtSunflowerKeyTyped(evt);
            }
        });
        panelBouquet.add(qBqtSunflower);
        qBqtSunflower.setBounds(407, 227, 90, 37);

        qBqtBabybreath.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qBqtBabybreathKeyTyped(evt);
            }
        });
        panelBouquet.add(qBqtBabybreath);
        qBqtBabybreath.setBounds(407, 280, 90, 37);

        jPanel1.add(panelBouquet);
        panelBouquet.setBounds(20, 50, 530, 350);

        panelBulk.setBackground(new java.awt.Color(204, 255, 204));
        panelBulk.setForeground(new java.awt.Color(255, 255, 204));
        panelBulk.setLayout(null);
        panelBulk.add(labelBulkAster);
        labelBulkAster.setBounds(38, 63, 321, 37);
        panelBulk.add(labelBulkRose);
        labelBulkRose.setBounds(38, 170, 321, 37);
        panelBulk.add(labelBulkDaisy);
        labelBulkDaisy.setBounds(38, 227, 321, 37);
        panelBulk.add(labelBulkSunflower);
        labelBulkSunflower.setBounds(38, 282, 321, 37);
        panelBulk.add(labelBulkDahlia);
        labelBulkDahlia.setBounds(38, 118, 321, 37);

        jLabel2.setText("Quantity");
        panelBulk.add(jLabel2);
        jLabel2.setBounds(430, 25, 60, 29);

        qBulkAster.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qBulkAsterKeyTyped(evt);
            }
        });
        panelBulk.add(qBulkAster);
        qBulkAster.setBounds(416, 63, 80, 37);

        qBulkDahlia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qBulkDahliaKeyTyped(evt);
            }
        });
        panelBulk.add(qBulkDahlia);
        qBulkDahlia.setBounds(416, 118, 80, 37);

        qBulkRose.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qBulkRoseKeyTyped(evt);
            }
        });
        panelBulk.add(qBulkRose);
        qBulkRose.setBounds(416, 170, 80, 37);

        qBulkDaisy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qBulkDaisyKeyTyped(evt);
            }
        });
        panelBulk.add(qBulkDaisy);
        qBulkDaisy.setBounds(416, 227, 80, 37);

        qBulkSunflower.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qBulkSunflowerKeyTyped(evt);
            }
        });
        panelBulk.add(qBulkSunflower);
        qBulkSunflower.setBounds(416, 282, 80, 37);

        jPanel1.add(panelBulk);
        panelBulk.setBounds(550, 50, 530, 350);

        panelPackage.setBackground(new java.awt.Color(255, 204, 255));
        panelPackage.setForeground(new java.awt.Color(255, 255, 204));
        panelPackage.setLayout(null);
        panelPackage.add(labelPkgFL);
        labelPkgFL.setBounds(37, 77, 321, 37);
        panelPackage.add(labelPkgGWS);
        labelPkgGWS.setBounds(37, 184, 321, 37);
        panelPackage.add(labelPkgCondolescence);
        labelPkgCondolescence.setBounds(37, 241, 321, 37);
        panelPackage.add(labelPkgHB);
        labelPkgHB.setBounds(37, 296, 321, 37);
        panelPackage.add(labelPkgCongrates);
        labelPkgCongrates.setBounds(37, 132, 321, 37);

        jLabel4.setText("Quantity");
        panelPackage.add(jLabel4);
        jLabel4.setBounds(433, 39, 60, 29);

        qPkgFL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qPkgFLKeyTyped(evt);
            }
        });
        panelPackage.add(qPkgFL);
        qPkgFL.setBounds(412, 77, 90, 37);

        qPkgCongrates.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qPkgCongratesKeyTyped(evt);
            }
        });
        panelPackage.add(qPkgCongrates);
        qPkgCongrates.setBounds(412, 132, 90, 37);

        qPkgGWS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qPkgGWSKeyTyped(evt);
            }
        });
        panelPackage.add(qPkgGWS);
        qPkgGWS.setBounds(412, 184, 90, 37);

        qPkgCondolescence.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qPkgCondolescenceKeyTyped(evt);
            }
        });
        panelPackage.add(qPkgCondolescence);
        qPkgCondolescence.setBounds(412, 241, 90, 37);

        qPkgHB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qPkgHBKeyTyped(evt);
            }
        });
        panelPackage.add(qPkgHB);
        qPkgHB.setBounds(412, 296, 90, 37);

        jPanel1.add(panelPackage);
        panelPackage.setBounds(20, 450, 530, 360);

        panelPackage1.setBackground(new java.awt.Color(255, 204, 153));
        panelPackage1.setForeground(new java.awt.Color(255, 255, 204));
        panelPackage1.setLayout(null);
        panelPackage1.add(labelFBSmall);
        labelFBSmall.setBounds(45, 78, 321, 37);
        panelPackage1.add(labelFBLarge);
        labelFBLarge.setBounds(45, 193, 321, 37);
        panelPackage1.add(labelFBMedium);
        labelFBMedium.setBounds(45, 140, 321, 37);

        jLabel3.setText("Quantity");
        panelPackage1.add(jLabel3);
        jLabel3.setBounds(426, 40, 60, 29);

        qFBSmall.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qFBSmallKeyTyped(evt);
            }
        });
        panelPackage1.add(qFBSmall);
        qFBSmall.setBounds(410, 80, 90, 40);

        qFBMedium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qFBMediumActionPerformed(evt);
            }
        });
        qFBMedium.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qFBMediumKeyTyped(evt);
            }
        });
        panelPackage1.add(qFBMedium);
        qFBMedium.setBounds(410, 140, 90, 40);

        qFBLarge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qFBLargeKeyTyped(evt);
            }
        });
        panelPackage1.add(qFBLarge);
        qFBLarge.setBounds(410, 198, 90, 37);

        jPanel1.add(panelPackage1);
        panelPackage1.setBounds(550, 450, 530, 360);

        jLabel5.setText("Checkout :");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(910, 810, 90, 50);

        combocheckout.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Delivery", "Walk in" }));
        combocheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combocheckoutActionPerformed(evt);
            }
        });
        jPanel1.add(combocheckout);
        combocheckout.setBounds(990, 820, 100, 26);

        jLabel6.setText("Total : ");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(20, 910, 52, 50);
        jPanel1.add(totalPrice);
        totalPrice.setBounds(80, 920, 160, 30);

        calBtn.setText("Calculate");
        calBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calBtnActionPerformed(evt);
            }
        });
        jPanel1.add(calBtn);
        calBtn.setBounds(20, 880, 110, 29);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1100, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 980, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1122, 1036));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        new MainMenu().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void qFBMediumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qFBMediumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qFBMediumActionPerformed

    private void qBqtBlossomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qBqtBlossomActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_qBqtBlossomActionPerformed

    private void combocheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combocheckoutActionPerformed
        // TODO add your handling code here:
        select_combo();
        
    }//GEN-LAST:event_combocheckoutActionPerformed

    private void calBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calBtnActionPerformed
        // TODO add your handling code here:
        float tot_all=0;
        
        //CALCULATE BOUQUET PRICE
        int z1=0, z2=0, z3=0, z4=0, z5=0;
    float p_z1=0, p_z2=0, p_z3=0, p_z4=0, p_z5=0, totz=0; 
        
        if(Wishlist.cartBqtBlossom.isSelected())
        {
            z1 = Integer.parseInt(qBqtBlossom.getText());
            if (z1>0)
            {
                p_z1 = 45*z1;
               
            }    
                
            else
            {
                 JOptionPane.showMessageDialog(null, "Please enter valid quantity");
                return;
            }
        }
        
        if(Wishlist.cartBqtHydrangea.isSelected())
        {
            z2 = Integer.parseInt(qBqtHydrangea.getText());
            if (z2>0)
            {
                p_z2 = 80*z2;
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please enter valid quantity");
                return;
            }
            
        }
        
        if(Wishlist.cartBqtRose.isSelected())
        {
            z3 = Integer.parseInt(qBqtRose.getText());
            if (z3>0)
            {
                p_z3 = 100*z3;
               
            }
            else
            {
                 JOptionPane.showMessageDialog(null, "Please enter valid quantity");
                return;
            }
             
        }
        if(Wishlist.cartBqtSunflower.isSelected())
        {
            z4 = Integer.parseInt(qBqtSunflower.getText());
            if (z4>0)
            {
                p_z4 = 85*z4;
                
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please enter valid quantity");
                return;
            }
            
        }
        if(Wishlist.cartBqtBabybreath.isSelected())
        {
            z5 = Integer.parseInt(qBqtBabybreath.getText());
            if (z5>0)
            {
                p_z5 = 70*z5;
                
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please enter valid quantity");
                return;
            }
        }
        
        totz = p_z1 + p_z2 + p_z3 + p_z4 + p_z5;
        
        //CALCULATE PACKAGE PRICE
        int y1=0, y2=0, y3=0, y4=0, y5=0;
    float p_y1=0, p_y2=0, p_y3=0, p_y4=0, p_y5=0, toty=0; 
        
        if(Wishlist.cartPkgFL.isSelected())
        {
            y1 = Integer.parseInt(qPkgFL.getText());
            if (y1>0)
            {
                p_y1 = 150*y1;
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please enter valid quantity");
                return;
            }
            
        }
        if(Wishlist.cartPkgCongrates.isSelected())
        {
            y2 = Integer.parseInt(qPkgCongrates.getText());
            if (y2>0)
            {
                p_y2 = 120*y2;
               
            }
            else
            {
                 JOptionPane.showMessageDialog(null, "Please enter valid quantity");
                return;
            }
        }
        if(Wishlist.cartPkgGWS.isSelected())
        {
            y3 = Integer.parseInt(qPkgGWS.getText());
            if (y3>0)
            {
                p_y3 = 90*y3;
               
            }
            else
            {
                 JOptionPane.showMessageDialog(null, "Please enter valid quantity");
                return;
            }
             
        }
        if(Wishlist.cartPkgCondolescence.isSelected())
        {
            y4 = Integer.parseInt(qPkgCondolescence.getText());
            if (y4>0)
            {
                p_y4 = 90*y4;
               
            }
            else
            {
                 JOptionPane.showMessageDialog(null, "Please enter valid quantity");
                return;
            }
            
        }
        if(Wishlist.cartPkgHB.isSelected())
        {
            y5 = Integer.parseInt(qPkgHB.getText());
            if (y5>0)
            {
                p_y5 = 135*y5;
                
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please enter valid quantity");
                return;
            }
        }
        
        toty = p_y1 + p_y2 + p_y3 + p_y4 + p_y5;
        
        
        //CALCULATE BULK PRICE
        int x1=0, x2=0, x3=0, x4=0, x5=0;
        float p_x1=0, p_x2=0, p_x3=0, p_x4=0, p_x5=0, totx=0; 
        
        if(Wishlist.cartBulkAster.isSelected())
        {
            x1 = Integer.parseInt(qBulkAster.getText());
            if(x1>0)
            {
                p_x1 = (float) (1.5*x1);
            }
            else
                {
                JOptionPane.showMessageDialog(null, "Please enter valid quantity");
                return;
            }
        }
        if(Wishlist.cartBulkDahlia.isSelected())
        {
            x2 = Integer.parseInt(qBulkDahlia.getText());
            if(x2>0)
            {
                p_x2 = 4*x2;
            }
            else
                {
                JOptionPane.showMessageDialog(null, "Please enter valid quantity");
                return;
            }
            
        }
        if(Wishlist.cartBulkRose.isSelected())
        {
            x3 = Integer.parseInt(qBulkRose.getText());
            if(x3>0)
            {
             p_x3 = (float) (2.5*x3);
            }
            else
                {
                JOptionPane.showMessageDialog(null, "Please enter valid quantity");
                return;
            }
        }
        if(Wishlist.cartBulkDaisy.isSelected())
        {
            x4 = Integer.parseInt(qBulkDaisy.getText());
            if(x4>0)
            {
            p_x4 = 4*x4;
            }
            else
                {
                JOptionPane.showMessageDialog(null, "Please enter valid quantity");
                return;
            }
        }
        if(Wishlist.cartBulkSunflower.isSelected())
        {
            x5 = Integer.parseInt(qBulkSunflower.getText());
            if(x5>0)
            {
                p_x5 = (float) (4.5*x5);
            }
            else
                {
                JOptionPane.showMessageDialog(null, "Please enter valid quantity");
                return;
            }
        }
        
        totx = p_x1 + p_x2 + p_x3 + p_x4 + p_x5;
        
        
        //CALCULATE FRUIT BASKET PRICE
        int f1=0, f2=0, f3=0;
        float p_f1=0, p_f2=0, p_f3=0, totf=0; 
        
        if(Wishlist.cartFBSmall.isSelected())
        {
            f1 = Integer.parseInt(qFBSmall.getText());
            if(f1>0)
            {
                 p_f1 = 50*f1;
            }
             else
                {
                JOptionPane.showMessageDialog(null, "Please enter valid quantity");
                return;
            }
        }
        if(Wishlist.cartFBMedium.isSelected())
        {
            f2 = Integer.parseInt(qFBMedium.getText());
            if(f2>0)
            {
                 p_f2 = 65*f2;
            }
             else
                {
                JOptionPane.showMessageDialog(null, "Please enter valid quantity");
                return;
            }
        }
        if(Wishlist.cartFBLarge.isSelected())
        {
            f3 = Integer.parseInt(qFBLarge.getText());
            if(f3>0)
            {
             p_f3 = 70*f3;
            }
             else
                {
                JOptionPane.showMessageDialog(null, "Please enter valid quantity");
                return;
            }
        }
        
        totf = p_f1 + p_f2 + p_f3;
        
        tot_all = totz + toty + totx + totf;
        totalPrice.setText(tot_all + " ");
        
        jLabel5.setVisible(true);
         combocheckout.setVisible(true);
    }//GEN-LAST:event_calBtnActionPerformed

    private void qBqtBlossomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qBqtBlossomKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE ) || c==KeyEvent.VK_DELETE )
        {
            getToolkit().beep();
            evt.consume();
        }
        
    }//GEN-LAST:event_qBqtBlossomKeyTyped

    private void qBqtHydrangeaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qBqtHydrangeaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE ) || c==KeyEvent.VK_DELETE )
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_qBqtHydrangeaKeyTyped

    private void qBqtRoseKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qBqtRoseKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE ) || c==KeyEvent.VK_DELETE )
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_qBqtRoseKeyTyped

    private void qBqtSunflowerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qBqtSunflowerKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE ) || c==KeyEvent.VK_DELETE )
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_qBqtSunflowerKeyTyped

    private void qBqtBabybreathKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qBqtBabybreathKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE ) || c==KeyEvent.VK_DELETE )
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_qBqtBabybreathKeyTyped

    private void qPkgFLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qPkgFLKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE ) || c==KeyEvent.VK_DELETE )
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_qPkgFLKeyTyped

    private void qPkgCongratesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qPkgCongratesKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE ) || c==KeyEvent.VK_DELETE )
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_qPkgCongratesKeyTyped

    private void qPkgGWSKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qPkgGWSKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE ) || c==KeyEvent.VK_DELETE )
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_qPkgGWSKeyTyped

    private void qPkgCondolescenceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qPkgCondolescenceKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE ) || c==KeyEvent.VK_DELETE )
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_qPkgCondolescenceKeyTyped

    private void qPkgHBKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qPkgHBKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE ) || c==KeyEvent.VK_DELETE )
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_qPkgHBKeyTyped

    private void qBulkAsterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qBulkAsterKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE ) || c==KeyEvent.VK_DELETE )
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_qBulkAsterKeyTyped

    private void qBulkDahliaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qBulkDahliaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE ) || c==KeyEvent.VK_DELETE )
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_qBulkDahliaKeyTyped

    private void qBulkRoseKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qBulkRoseKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE ) || c==KeyEvent.VK_DELETE )
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_qBulkRoseKeyTyped

    private void qBulkDaisyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qBulkDaisyKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE ) || c==KeyEvent.VK_DELETE )
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_qBulkDaisyKeyTyped

    private void qBulkSunflowerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qBulkSunflowerKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE ) || c==KeyEvent.VK_DELETE )
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_qBulkSunflowerKeyTyped

    private void qFBSmallKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qFBSmallKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE ) || c==KeyEvent.VK_DELETE )
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_qFBSmallKeyTyped

    private void qFBMediumKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qFBMediumKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE ) || c==KeyEvent.VK_DELETE )
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_qFBMediumKeyTyped

    private void qFBLargeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qFBLargeKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE ) || c==KeyEvent.VK_DELETE )
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_qFBLargeKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calBtn;
    private javax.swing.JComboBox<String> combocheckout;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelBqtBabybreath;
    private javax.swing.JLabel labelBqtBlossom;
    private javax.swing.JLabel labelBqtHydrangea;
    private javax.swing.JLabel labelBqtRoses;
    private javax.swing.JLabel labelBqtSunflower;
    private javax.swing.JLabel labelBulkAster;
    private javax.swing.JLabel labelBulkDahlia;
    private javax.swing.JLabel labelBulkDaisy;
    private javax.swing.JLabel labelBulkRose;
    private javax.swing.JLabel labelBulkSunflower;
    private javax.swing.JLabel labelFBLarge;
    private javax.swing.JLabel labelFBMedium;
    private javax.swing.JLabel labelFBSmall;
    private javax.swing.JLabel labelPkgCondolescence;
    private javax.swing.JLabel labelPkgCongrates;
    private javax.swing.JLabel labelPkgFL;
    private javax.swing.JLabel labelPkgGWS;
    private javax.swing.JLabel labelPkgHB;
    private javax.swing.JPanel panelBouquet;
    private javax.swing.JPanel panelBulk;
    private javax.swing.JPanel panelPackage;
    private javax.swing.JPanel panelPackage1;
    private javax.swing.JTextField qBqtBabybreath;
    private javax.swing.JTextField qBqtBlossom;
    private javax.swing.JTextField qBqtHydrangea;
    private javax.swing.JTextField qBqtRose;
    private javax.swing.JTextField qBqtSunflower;
    private javax.swing.JTextField qBulkAster;
    private javax.swing.JTextField qBulkDahlia;
    private javax.swing.JTextField qBulkDaisy;
    private javax.swing.JTextField qBulkRose;
    private javax.swing.JTextField qBulkSunflower;
    private javax.swing.JTextField qFBLarge;
    private javax.swing.JTextField qFBMedium;
    private javax.swing.JTextField qFBSmall;
    private javax.swing.JTextField qPkgCondolescence;
    private javax.swing.JTextField qPkgCongrates;
    private javax.swing.JTextField qPkgFL;
    private javax.swing.JTextField qPkgGWS;
    private javax.swing.JTextField qPkgHB;
    public static javax.swing.JLabel totalPrice;
    // End of variables declaration//GEN-END:variables
}
